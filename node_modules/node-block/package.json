{
  "name": "node-block",
  "version": "0.1.6",
  "description": "An async control-flow library. Easily error handling.",
  "keywords": [
    "control-flow",
    "async"
  ],
  "author": {
    "name": "tasogarepg",
    "email": "tasogare.pg@gmail.com"
  },
  "license": "MIT",
  "homepage": "http://github.com/tasogarepg/node-block",
  "repository": {
    "type": "git",
    "url": "git://github.com/tasogarepg/node-block.git"
  },
  "main": "./lib/node-block.js",
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "# node-block\n\nAn async control-flow library for Node.js.  \nEasily parallel execution and error handling.  \n\n## Installation\n\n    $ npm install node-block\n\n## Example\n\n```js\nvar fs = require('fs');\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    fs.readFile('/path/to/file1', 'utf8', this.async('d1'));\n    fs.readFile('/path/to/file2', 'utf8', this.async('d2'));\n  },\n  function() {\n    var str = this.data.d1 + this.data.d2;\n    console.log(str);\n  }\n)();\n```\n\n### Error handling\n\nFunction name is `cat` and `fin`.\n\n```js\nvar fs = require('fs');\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    fs.readFile('/path/to/file1', 'utf8', this.async('d1'));\n    fs.readFile('/path/to/file2', 'utf8', this.async('d2'));\n  },\n  function() {\n    this.data.d3 = this.data.d1 + this.data.d2;\n  },\n  function cat(e) {       // catch\n    console.log(e);\n    throw e;\n  },\n  function fin() {        // finally\n    console.log('fin');   // always run\n  }\n)();\n```\n\n### Jump to end\n\ncall `this.end()` with return.\n\n```js\nvar fs = require('fs');\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    if (true) {\n      return this.end();  // called with return\n    }\n  },\n  function() {\n    // not run here.\n  },\n  function cat(e) {       // catch\n    // when errorless, not run here.\n  },\n  function fin() {        // finally\n    console.log('fin');   // always run\n  }\n)();\n```\n\n### Callback\n\nsample() is called after fin().\n\n```js\nvar fs = require('fs');\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    fs.readFile('/path/to/file1', 'utf8', this.async('d1'));\n  },\n  function fin() {\n    console.log('fin');\n  }\n)(sample);\n\nfunction sample(err){\n  if (err) throw err;\n  console.log(this.data.d1);\n}\n```\n\n### Nesting\n\n```js\nvar fs = require('fs');\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    fs.readFile('/path/to/file1', 'utf8', this.async('d1'));\n    fs.readFile('/path/to/file2', 'utf8', this.async('d2'));\n  },\n  function() {\n    fs.readFile('/path/to/file3', 'utf8', this.async('d3'));\n    block(\n      function() {\n        fs.readFile('/path/to/file4', 'utf8', this.async('e1'));\n        fs.readFile('/path/to/file5', 'utf8', this.async('e2'));\n      },\n      function() {\n        fs.readFile('/path/to/file6', 'utf8', this.async('e3'));\n      }\n    )(this.async('d4'));\n  },\n  function() {\n    var str = this.data.d1 + this.data.d2 + this.data.d3 +\n      this.data.d4.e1 + this.data.d4.e2 + this.data.d4.e3;\n    console.log(str);\n  }\n)();\n```\n\n### setTimeout\n\n```js\nvar block = require('node-block').block;\n\nblock(\n  function() {\n    var cb1 = this.async('d1');\n    setTimeout(function() {\n      try {\n        cb1(null, 'abc');\n      } catch (e) {\n        cb1(e);\n      }\n    }, 1000);\n  },\n  function() {\n    var str = this.data.d1;\n    console.log(str);   // abc\n  }\n)();\n```\n\n## License\n\nThe MIT License\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tasogarepg/node-block/issues"
  },
  "_id": "node-block@0.1.6",
  "dist": {
    "shasum": "e5650223cc228b29d177322c4112dcb0ad0a9d27",
    "tarball": "http://registry.npmjs.org/node-block/-/node-block-0.1.6.tgz"
  },
  "_resolved": "https://registry.npmjs.org/node-block/-/node-block-0.1.6.tgz",
  "scripts": {},
  "_npmVersion": "1.2.21",
  "_npmUser": {
    "name": "tasogarepg",
    "email": "tasogare.pg@gmail.com"
  },
  "maintainers": [
    {
      "name": "tasogarepg",
      "email": "tasogare.pg@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "e5650223cc228b29d177322c4112dcb0ad0a9d27",
  "_from": "node-block@*"
}
